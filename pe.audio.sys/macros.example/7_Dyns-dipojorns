#!/usr/bin/env python3

"""
    Alternates between two loudspeaker sets, both attached to differents
    channels ports from the same system sound card.

        >:-)

"""
##############################################
############### USER SETTINGS: ###############

lspk_A = {  'name':         'dipojorns',
            'drc_set':      'djestan_multiV2_mp',
            'xo_set':       'lp'}

lspk_B = {  'name':         'DynC5+AMRsub',
            'drc_set':      'lp_c5+sub_multip',
            'xo_set':       'lp_60Hz'}


#### DETAILS:
#
#    (i) FOA please prepare a set of copies of config.yml,
#        appropriately configured and named as following example:

#           config.yml.dipojorns
#           config.yml.DynC5+AMRsub
#
#    diffs:
#        > loudspeaker:      dipojorns       DynC5+AMRsub
#        > init_xo:          mp              mp_60Hz
#        < init_drc:         estant_mp       lp_c5+sub_multip
#        > ecasound_peq.py:  dj_estant.ecs     -not set-
#
#    Macro procedure:
#
#        - Stop preamp.py service to release .state.yml
#        - Stop ecasound script
#        - Stop Brutefir process
#        - Copy config.yml.YOURLSPK --> config.yml
#        - Adjust .state.yml so that resuming audio settings later works properly.
#        - Restart Brutefir (cd to your lspk folder)
#           (!) be SURE that your brutefir_config has a 50 dB initial level atten.
#        - Restart ecasound script if necessary
#        - Resuming audio settings from .state.yml (but leaving current input)
#        - Restart pasysctrl.py service
#        - If config.yml 'on_init:' section indicates any drc or xo ,
#          we still need to set the wanted here lspk_A/B
#        - Finally, will reselect the current input in order to retrieve any
#          particular input setting.

from subprocess import Popen
from shutil import copyfile
import os, sys

# ruamel.yaml preserves comments and items order when dumping to a file.
# https://yaml.readthedocs.io/en/latest/basicuse.html
# It is needed because we will modify the user commented out file 'config.yml'
# This file is not updated in a pre.di.c standard installation,
# but will do here.
from ruamel.yaml import YAML
import subprocess as sp
from time import sleep

UHOME = os.path.expanduser("~")
MAINFOLDER = f'{UHOME}/pe.audio.sys'
sys.path.append( f'{MAINFOLDER}/share' )

def load_yaml(fpath, typ='rt'):
    # (i) use typ='safe' to avoid the default behavoir
    #     loading string 'xxxx:off' as {xxx:False}
    try:
        yaml = YAML(typ=typ, pure=(True if typ=='safe' else False) )
        with open(fpath, 'r') as f:
            d = yaml.load( f.read() )
        return d
    except:
        print ( 'YAML error loading ' + fpath )

def dump_yaml(d, fpath, typ='rt'):
    # (!) use typ='safe' to save a key {xxxx:'off'} properly,
    #     instead of 'xxx:False' string, as per default behavoir.
    try:
        yaml = YAML(typ=typ)
        yaml.default_flow_style = False
        with open(fpath, 'w') as f:
            yaml.dump( d, f )
    except:
        print ( 'YAML error dumping ' + fpath )

def check_Dyn_AMP(outlets=[1]):
    accu = []
    for o in outlets:
        tmp = sp.check_output( (f'sispmctl -m {str(o)}').split() ) \
              .split()[-1].decode()
        if tmp == 'on':
            accu.append(True)
        else:
            accu.append(False)
    return all( accu )

def turn_on__Dyn_AMP(outlets=[1]):
    for o in outlets:
        sp.call( f'sispmctl -o {str(o)}'.split() )
        sleep(.5)

def peaudiosys_command(cmd):
    Popen( f'echo "{cmd}" | nc -N {control_addr} {str(control_port)}', shell=True )


if __name__ == "__main__":

    configPath   = f'{MAINFOLDER}/config.yml'
    configPath_A = f'{MAINFOLDER}/config.yml.{lspk_A["name"]}'
    configPath_B = f'{MAINFOLDER}/config.yml.{lspk_B["name"]}'
    statePath = f'{MAINFOLDER}/.state.yml'

    # Reading pe.audio.sys configuration
    current_config = load_yaml( configPath )
    control_addr = current_config["peaudiosys_address"]
    control_port = current_config["peaudiosys_port"]

    # Toggling thinks
    if current_config["loudspeaker"] == lspk_A["name"]:
        lspk_New = lspk_B
    else:
        lspk_New = lspk_A

    # Turning on Dynaudio AMP if needed
    if 'DynC5' in lspk_New["name"]:
        if not check_Dyn_AMP(outlets=[1,4]):
            turn_on__Dyn_AMP(outlets=[1,4])

    #  Macro procedure:

    # 1- Stop preamp.py service (the owner of state.yml)
    Popen( f'{UHOME}/bin/peaudiosys_service_restart.sh preamp stop'.split() )

    # 2- Stop ecasound script
    ecasound_in_use = False
    for item in current_config["scripts"]:
        if 'ecasound_peq.py' in item:
            ecasound_in_use = True
    if ecasound_in_use:
        Popen( f'{MAINFOLDER}/share/scripts/ecasound_peq.py stop'.split() )

    # 3- Stop Brutefir process
    Popen( f'pkill -f -KILL brutefir'.split() )
    sleep(.25)

    # 4- Copy config.yml.YOURLSPK --> config.yml
    copyfile( f'{MAINFOLDER}/config.yml.{lspk_New["name"]}',
              f'{MAINFOLDER}/config.yml')

    # 5- Adjust .state.yml so that init_audio_settings can do its job later
    # (i) It is needed to use typ='safe' to avoid 'off' as False
    new_state = load_yaml( statePath, typ='safe')
    new_state["drc_set"] = lspk_New["drc_set"]
    new_state["xo_set"]  = lspk_New["xo_set"]
    # (i) It is needed to use typ='safe' to ensure
    #     xxx:'off' instead of xxx:off
    dump_yaml(new_state, statePath, typ='safe')

    # 6- Restart Brutefir (cd to your lspk folder)
    #    (!!!) BE SURE that your brutefir_config has a 50dB initial level atten.
    os.chdir( f'{MAINFOLDER}/loudspeakers/{lspk_New["name"]}' )
    sp.Popen( 'brutefir brutefir_config'.split() )
    os.chdir ( UHOME )
    sleep(.5) # wait a while for Brutefir to start ...
    sp.Popen( 'jack_connect pre_in_loop:output_1 brutefir:in.L'.split() )
    sp.Popen( 'jack_connect pre_in_loop:output_2 brutefir:in.R'.split() )

    # 7- Restart ecasound script if necessary
    #    ( ecasound_eq.py will automagically insert it before Brutefir ports )
    current_config = load_yaml( configPath )
    ecasound_wanted = False
    for item in current_config["scripts"]:
        if 'ecasound_peq.py' in item:
            ecasound_wanted = True
    if ecasound_wanted:
        Popen( f'{MAINFOLDER}/share/scripts/ecasound_peq.py start'.split() )

    # 8- Resuming audio settings (but leaving current input)
    #    (i) import core must be done here, because core needs to know
    #        the new config.yml to calculate properly the
    #        loudspeaker ref_level_gain.
    import core
    state = core.init_audio_settings()
    core.save_yaml(state, statePath)
    #state = core.init_source() # NO

    # 9- restart preamp.py service
    #  (i) From now on, 'pasysctl.py' is the ONLY OWNER of STATE_PATH.
    Popen( f'{UHOME}/bin/peaudiosys_service_restart.sh preamp'.split() )
    sleep(2)

    # 10- If config.yml 'on_init:' section indicates any drc or xo ,
    #     we still need to set the wanted here at the very beginning
    #     for lspk_A or lspk_B
    peaudiosys_command( f'preamp set_drc {lspk_New["drc_set"]}' )
    peaudiosys_command( f'preamp set_xo  {lspk_New["xo_set"]}'  )

    # 11- Reselect the source to set appropriate input settings
    sleep(.2)
    peaudiosys_command( f'preamp input  {new_state["input"]}'  )


