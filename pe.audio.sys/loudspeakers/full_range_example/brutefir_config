# --------- THE EQ & CLI MODULES --------
logic:

# The command line interface server, listening on a TCP port.
"cli" { port: 3000; },

# The eq module provides a filter coeff to render a run-time EQ.
# (i) Bands here must match with the ones at your xxxxfreq.dat file.
"eq" {
    #debug_dump_filter: "/tmp/brutefir-rendered-%d";
    {
    coeff: "c.eq";
    bands: 18.0, 20.0, 22.4, 25.0, 28.0, 32.0, 36.0, 40.0, 44.8, 50.0, 56.0,
    63.0, 71.0, 80.0, 90.0, 100.0, 112.0, 126.0, 142.0, 160.0, 180.0, 200.0,
    224.0, 250.0, 280.0, 320.0, 360.0, 400.0, 448.0, 500.0, 560.0, 630.0,
    710.0, 800.0, 900.0, 1000.0, 1120.0, 1260.0, 1420.0, 1600.0, 1800.0,
    2000.0, 2240.0, 2500.0, 2800.0, 3200.0, 3600.0, 4000.0, 4480.0, 5000.0,
    5600.0, 6300.0, 7100.0, 8000.0, 9000.0, 10000.0, 11200.0, 12600.0,
    14200.0, 16000.0, 18000.0, 20000.0, 22040.0;
    };
};

# --------- GENERAL SETTINGS --------

convolver_config:   "~/.brutefir_convolver_16k";
sampling_rate:      48000 ;
filter_length:      16384 ;
float_bits:         32 ;
overflow_warnings:  true ;
allow_poll_mode:    false ;
monitor_rate:       true ;
powersave:          -80 ;
lock_memory:        true ;
show_progress:      false ;

# -------------  I/O: -------------

input "in.L", "in.R" {
    # does not connect inputs in jack:
    device:   "jack" {  clientname: "brutefir";
                        ports: ""/"in.L", ""/"in.R"; };
    sample:   "AUTO";
    channels: 2/0,1;
};

output "fr.L", "fr.R" {
    # hard wired to jack sound card ports:
    device: "jack" { ports:
        "system:playback_1"/"fr.L", "system:playback_2"/"fr.R";
    };
    sample:   "AUTO";
    channels: 2/0,1;
    maxdelay: 1000;
    dither:   true;
    delay:    0, 0; # (samples)
};

# --------- COEFFs for EQ & LOUDNESS ---------
# 1 block length is enough to smooth eq curves

coeff "c.eq" {
    filename: "dirac pulse";
    shared_mem: true;
    blocks: 1;
};
    
# -------  COEFFs for DRC --------

coeff "drc.L.p1" {
    filename:    "drc.L.p1.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "drc.R.p1" {
    filename:    "drc.R.p1.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "drc.L.p2" {
    filename:    "drc.L.p2.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "drc.R.p2" {
    filename:    "drc.R.p2.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "xo.fr.mp" {
    filename:    "xo.fr.mp.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "xo.fr.lp" {
    filename:    "xo.fr.lp.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "xo.lo.mp" {
    filename:    "xo.lo.mp.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "xo.lo.lp" {
    filename:    "xo.lo.lp.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "xo.hi.mp" {
    filename:    "xo.hi.mp.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};

coeff "xo.hi.lp" {
    filename:    "xo.hi.lp.pcm";
    format:      "FLOAT_LE";
    shared_mem:  false;
    attenuation: 0;
};


# ------------ CONVOLVER:  level filter  --------------
# Not a filter just for level and channel routing purposes
# (i) initial 50 dB atten for a safe startup

filter "f.lev.L" {
    from_inputs:  "in.L"/50.0/1, "in.R"//0;
    to_filters:   "f.eq.L";
    coeff:        -1;
};

filter "f.lev.R" {
    from_inputs:  "in.L"//0, "in.R"/50.0/1;
    to_filters:   "f.eq.R";
    coeff:        -1;
};


# ------------ CONVOLVER:  EQ filters  ----------------

filter "f.eq.L" {
    from_filters: "f.lev.L";
    to_filters:   "f.drc.L";
    coeff:        "c.eq";
};

filter "f.eq.R" {
    from_filters: "f.lev.R";
    to_filters:   "f.drc.R";
    coeff:        "c.eq";
};

# ------------ CONVOLVER: DRC filters -------------------

filter "f.drc.L" {
    from_filters: "f.eq.L";
    to_filters:   "f.fr.L";
    coeff:        -1;
};

filter "f.drc.R" {
    from_filters: "f.eq.R";
    to_filters:   "f.fr.R";
    coeff:        -1;
};

# ------------ CONVOLVER: XOVER filters --------------------
# Free full range, multiway, subwoofer filters to outputs

filter "f.fr.L" {
    from_filters: "f.drc.L";
    to_outputs:   "fr.L"/0.0/+1;
    coeff:        -1;
};

filter "f.fr.R" {
    from_filters: "f.drc.R";
    to_outputs:   "fr.R"/0.0/+1;
    coeff:        -1;
};

