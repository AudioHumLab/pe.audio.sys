# ===========================  JACK CONFIGURATION ==============================

jack:

    #backend:   dummy

    #backend:    firewire
    #device:     guid:0x00130e01000406d2

    backend:    alsa
    device:     hw:0,0

    period:     1024
    # nperiods set 2 or 3 for serial interfaces (usb, firewire)
    nperiods:   2

    # Additional cards to be used in jack by resampling,
    # either as capture or as playback devices.
    # Resampling quality: 0..4 for alsa_in/out or auto|16..96 for zita-a2j/j2a
    external_cards:

    #   sintax:
    #   <descriptor_name>  will be used to name the belonging jack ports
    #       device:        <hw:ALSANAME>
    #       resampler:     <zita-a2j | zita-j2a | alsa_in | alsa_out>
    #       resamplingQ:   <NN> | auto (zita)
    #       misc_params:   <.....>
    #
    #
    #   example: an usb device for capture
    #
    #   LineIN:
    #       device:        hw:CODEC
    #       resampler:     zita-a2j
    #       resamplingQ:   auto
    #       misc_params:
    #
    #   example: an usb device for signal monitoring
    #
    #   external_monitor:
    #       device:        hw:CODEC
    #       resampler:     zita-j2a
    #       resamplingQ:   48
    #       misc_params:


# =========================  LIMITS  ===========================================

# Max balance setting authorised
balance_max:   6.0

# Max gain authorised at convolver output
gain_max:    0.0

# Equal loudness curves ceiled above the reference SPL
eq_loud_ceil: true

# Should Brutefir EQ stage to be linear phase?
bfeq_linear_phase: false


# ========================== THE LOUDSPEAKER  ==================================

# Put here your loudspeaker folder name
loudspeaker: full_range_example

# Estimated perceived reference SPL at listening point
refSPL:         83

# Gain dBFS at convolver output to obtain the reference SPL (level = 0.0):
ref_level_gain: -10.0


# ========================= STARTUP BEHAVIOR: ==================================
# (i) Leave blank these fields to restore from the last state,
#     or indicate a value to force.
#     Use quotes for string type options (midside, solo, input).

on_init:

    # Put here the common IDSTRING that identifies the XO FIR filters at start up.
    # ie: xo.lo.IDSTRING.pcm  xo.hi.IDSTRING.pcm
    xo:     # leave blank for a fullrange loudspeaker

    # Put here the IDSTRING that identifies the DRC FIR filters at start up.
    # ie: drc.L.IDSTRING.pcm  drc.R.IDSTRING.pcm
    drc:    sample

    # Put here just a target <ID> w/o the filename suffix 'ID_target_mag.dat'
    target: B&K

    # Others settings: (if any max_level will override level)
    level:
    max_level:          -20
    muted:              false
    bass:               0
    treble:             0
    balance:            0
    equal_loudness:     true
    lu_offset:          6.0     # most records suffers loudness war mastering
    midside:            'off'
    polarity:           '++'
    solo:               'off'
    input:              'none'

# Optional user macro at startup
run_macro:              '7_mpd_play_mylist'


# =================== BEHAVIOR WHEN CHANGE INPUT:  =============================
# (i) This is intended to forget or keep some of your runtime settings (tone, etc)
#     after you select a new music source.
#     Leave blank these fields to keep or indicate a value to forget.
#     Use quotes for string type options (midside and solo).

on_change_input:
    bass:               0.0
    treble:             0.0
    equal_loudness:     true
    lu_offset:          6.0     # most records suffers loudness war mastering
    midside:            'off'
    solo:               'off'


# ============================  SOURCES  =======================================
# (i)
#     - If 'jack_pname's here are named 'xxxxloop', then the preamp will
#       automagically spawn them for the sources can connect into. Obviously the
#       sources must be configured accordingly. This applies for MPD and ALSA players.
#
#     - xo, drc fields are optional, you may want minimum phase FIRs for video.
#
#     - lu_offset field is optional and overrides the on_change_input behavior.
#
#     - A remote peaudiosys system can be defined as source, see documentation.


sources:

    spotify:
        jack_pname:     alsa_loop           # (i) same in ALSA players's config
        gain:           0.0
        xo:

    mpd:
        jack_pname:     mpd_loop            # (i) same in ~/.mpdconf
        gain:           0.0
        xo:

    istreams:
        jack_pname:     mplayer_istreams    # (i) same in ~/.mplayer/config
        gain:           0.0
        xo:

    dvb:
        jack_pname:     mplayer_dvb         # (i) same in ~/.mplayer/config
        gain:           0.0
        xo:

    tv:
        jack_pname:     system
        gain:           +6.0                # low level source
        xo:                                 # min-pha if available for low latency
        target:         none                # maybe preferred for movie dialogue

    remoteLivingRoom:
        jack_pname:     192.168.1.234       # remote pe.audio.sys IP (see documentation)
        gain:           0.0
        xo:


# ========================== SOURCE MONITOR PORTS ==============================
# The source selector will connect the source also here.
# If an external card is used, then the <monitorName> must match the
# <descriptor_name> usen in the above <external_cards:> section.

source_monitors:

    # - external_monitor

# ================ SCRIPTS YOU WANT TO RUN (players, etc...)  ==================
# The scripts files are located under the share/scripts folder.
# Files must be executable, also must accept 'start' and 'stop' as
# command line argument in order to be launched and stopped at system startup.

scripts:

    ## IR remote receiver
    #- ir.py

    ## Inserts a parametric EQ based on 'fil' plugin (LADSPA) hosted under Ecasound
    ## This option needs the share/eq/xxxxx.ecs file to be indicated.
    #- ecasound_peq.py: quarter_space.ecs

    ## Restore sound cards mixer settings:
    - sound_cards_prepare.py

    ## Runs MPD:
    - mpd.py

    ## Internet url audio streams player based on Mplayer:
    - istreams.py

    ## Set Pulseaudio apps to sound through by JACK:
    #- pulseaudio-jack-sink.py

    ## DVB-T player based on Mplayer, useful for DVB-T radio stations:
    #- DVB-T.py

    ## A Mplayer based CDDA player:
    #- CDDA.py

    ## A daemon to autoplay a CD-Audio when inserted
    #- autoplay_cdda.py

    ## A daemon to auto eject a CD-Audio when playback is over
    - autoeject_cdda.py

    ## librespot (a headless Spotify Connect player daemon)
    #- librespot.py

    ## A Spotify Desktop monitor
    #- spotify_monitor.py

    ## Plays audio streamed from AirPlay sources
    #- shairport-sync.py

    ## A LAN audio receiver
    #- zita_link.py

    ## Controls the volume by a mouse
    #- mouse_volume_daemon.py

    ## A daemon that monitorizes the EBU R128 LU-I Loudness Integrated
    #- loudness_monitor.py

    ## The LCDd server and lcd_daemon.py
    #- lcd.py


# ========================= MISCEL CONFIGURATIONS ==============================

# set _address to 'localhost', or set '0.0.0.0' if you want to listen outside
peaudiosys_address:     localhost
peaudiosys_port:        9990

# CD-ROM device
cdrom_device:  /dev/cdrom

# Configure here your command line script to SWITCH ON/OFF your AMPLIFIER.
# (i) It is expected that the script will store the amplifier state
#         'on'|'1'    or    'off'|'0'
#     into the file '~/.amplifier' so that others processes could know about.
amp_manager:                       # for instance: /home/pi/bin/ampli.sh

# Amplifier switch off will stop the current player:
amp_off_stops_player: true

# Control web page behavior
web_config:
    # hide the LU offset slider and the LU monitor bar
    hide_LU: false
    # display EQ and DRC graphs
    show_graphs: true
    # the main selector can manage 'inputs' or 'macros':
    main_selector: 'inputs'


# The scope ('input', 'album' or 'track') to trigger to reset the measured LU
# from the optional loudness_monitor.py script. Can be modified in runtime.
LU_reset_scope: album

# Powersave: stops/starts Brutefir as per the monitored signal level.
powersave:              false
powersave_noise_floor: -70
powersave_minutes:      10  # Time in minutes before shutting down Brutefir


# =========================      AUTO UPDATE      ==============================
# Will add a crontab job in order to auto update from AudioHumLab master branch,
# every day late at night (see crontab -l)
# Recommended 'true' unless you want to update manually.
auto_update:   true
