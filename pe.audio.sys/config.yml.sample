# ===========================  SOUND CARDS =====================================

# Main system card alsa name
system_card: hw:0

# Additional cards to be used resampled under jack,
# either as capture or as playback devices.
# resamplingQuality: 0..4 for alsa_in/out or 16..96 for zita-a2j/j2a
# sintax:
# <card jack name>
#   {alsacard: ..., resampler: ..., resamplingQ:..., misc_params:...}
external_cards:

    # sintax:
    #<descriptor_name>  will be used to name the belonging jack ports
    #    alsacard: <hw:ALSANAME>
    #    resampler: <zita-a2j | zita-j2a | alsa_in | alsa_out>
    #    resamplingQ: <NN>
    #    misc_params: <''>

    # some examples:
    # This is used to capture
    #LineIN:
    #    alsacard: hw:CODEC
    #    resampler: zita-a2j
    #    resamplingQ: 96
    #    misc_params: ''
    
    # This is used just to RTA external monitoring
    #DEQ2496:
    #    alsacard: hw:CODEC
    #    resampler: zita-j2a
    #    resamplingQ: 48
    #    misc_params: ''


# ===================  JACK SOUND CARD CONFIGURATION  ==========================

# DUMMY backend for testing:
#jack_options:           -R -d dummy
#jack_backend_options:   -r 48000 -P 6 -C 2

# ALSA backend (leave $autoCard and $autoFS under options below,
#               it will be replaced by the actual values)
jack_options:           -R -d alsa
jack_backend_options:   -d $autoCard -r $autoFS -p 1024 -n2 


# =========================  LIMITS  ===========================================

# Max balance setting authorised
balance_max:   6.0

# Max gain authorised at convolver output
gain_max:    0.0

# Loudness EQ compensation ceiled at your reference SPL
loud_ceil: false

# Should Brutefir EQ stage to be linear phase?
bfeq_linear_phase: false

# ========================== THE LOUDSPEAKER  ==================================

# Put here your loudspeaker folder name
loudspeaker: full_range_example

# Gain dBFS at convolver output to obtain the reference SPL (level = 0.0):
ref_level_gain: -10.0

# ========================= STARTUP BEHAVIOR: ==================================
# (i) Leave blank these fields to restore from the last state,
#     or indicate a value to force.
#     Use quotes for string type options (midside, solo, input).

on_init:

    # Put here the common IDSTRING that identifies the XO FIR filters at start up.
    # ie: xo.lo.IDSTRING.pcm  xo.hi.IDSTRING.pcm
    xo:     # leave blank for a fullrange loudspeaker

    # Put here the IDSTRING that identifies the DRC FIR filters at start up.
    # ie: drc.L.IDSTRING.pcm  drc.R.IDSTRING.pcm
    drc:    sample

    # Put here just whatever the target filename prefix,
    # w/o '_mag.dat' neither '_pha.dat'
    target: +3.0-1.5_target

    # Others settings: (if any max_level will override level)
    level:              
    max_level:          -20
    muted:              false
    bass:               0
    treble:             0
    balance:            0
    loudness_track:     true
    loudness_ref:       6.0     # most records suffers loudness war mastering
    midside:            'off'
    polarity:           '++'
    solo:               'off'
    input:              'none'

# Optional user macro at startup
run_macro:              '7_mpd_play_mylist'


# =================== BEHAVIOR WHEN CHANGE INPUT:  =============================
# (i) This is intended to forget or keep some of your runtime settings (tone, etc)
#     after you select a new music source.
#     Leave blank these fields to keep or indicate a value to forget.
#     Use quotes for string type options (midside and solo).

on_change_input:
    bass:               0.0
    treble:             0.0
    loudness_track:     true
    loudness_ref:       6.0     # most records suffers loudness war mastering
    midside:            'off'
    solo:               'off'


# ============================  SOURCES  =======================================
# (i)
#     - If capture_ports here are named 'xxxxloop', then the preamp will
#       automagically spawn them for the sources can connect into. Obviously the
#       sources must be configured accordingly.
#
#     - xo, drc fields are optional, you may want minimum phase FIRs for video.
#
#     - loudness_ref field is optional and overrides the on_change_input behavior.
#
#     - If a source is named "remotexxx", will try to get metada from its
#       address field, a port field can also be specified (defaults to 9990)


sources:

    spotify:
        capture_port:   alsa_loop
        gain:           0.0
        xo:             

    mpd:
        capture_port:   mpd_loop
        gain:           0.0
        xo:             

    istreams:
        capture_port:   mplayer_istreams
        gain:           0.0
        xo:             
    
    tv:
        capture_port:   system
        gain:           +6.0                # low level source
        xo:                                 # min-pha if available for low latency
        target:         none                # maybe preferred for movie dialogue

    remote:
        capture_port:   zita-n2j
        gain:           0.0
        xo:             
        address:        192.168.1.234


# ========================== SOURCE MONITOR PORTS ==============================
# The source selector will connect the source also here.
# If an external card is used, then the <monitorName> must match the
# <descriptor_name> usen in the above external_cards: section.

source_monitors:

    # syntax
    # - <monitorName>
    # - DEQ2496

# ================ SCRIPTS YOU WANT TO RUN (players, etc...)  ==================
# The scripts files are located under the share/scripts folder.
# Files must be executable, also must accept 'start' and 'stop' as
# command line argument in order to be launched and stopped at system startup.

scripts:

    ## IR remote receiver
    #- ir.py
    
    ## Inserts a parametric EQ based on 'fil' plugin (LADSPA) hosted under Ecasound
    ## This option needs the share/eq/xxxxx.ecs file to be indicated.
    #- ecasound_peq.py: quarter_space.ecs

    ## Releases cards from Pulseaudio and restore alsa mixer settings:
    - sound_cards_prepare.py
    
    ## Runs MPD:
    - mpd.py
    
    ## Internet url audio streams player based on Mplayer:
    - istreams.py
    
    ## Set Pulseaudio apps to sound through by JACK:
    #- pulseaudio-jack-sink.py
    
    ## DVB-T player based on Mplayer, useful for DVB-T radio stations:
    #- DVB-T.py
    
    ## A Mplayer based CDDA player:
    #- CDDA.py
 
    ## A daemon to autoplay a CD-Audio when inserted
    #- autoplay_cdda.py
    
    ## librespot (a headless Spotify Connect player daemon)
    #- librespot.py
    
    ## Plays audio streamed from AirPlay sources
    #- shairport-sync.py
    
    ## A LAN multicast audio receiver
    #- zita-n2j_mcast.py
    
    ## A LAN multicast audio sender
    #- zita-j2n_mcast.py
    
    ## A Spotify Desktop monitor
    #- spotify_monitor.py
    
    ## Controls the volume by a mouse
    #- mouse_volume_daemon.py
    
    ## A daemon that monitorizes the EBU R128 Loudness Integrated
    #- loudness_monitor.py

    ## The LCDd server and lcd_daemon.py
    #- lcd.py


# ========================= MISCEL CONFIGURATIONS ==============================

# set _address to 'localhost', or set '0.0.0.0' if you want to listen outside
peaudiosys_address:     localhost
peaudiosys_port:        9990

# CD-ROM device
cdrom_device:  /dev/cdrom

# Configure here your command line script to SWITCH ON/OFF your AMPLIFIER.
# (i) It is expected that the script will store the amplifier state
#         'on'|'1'    or    'off'|'0'
#     into the file '~/.amplifier' so that others processes could know about.
amp_manager:                       # for instance: /home/pi/bin/ampli.sh

# Amplifier switch off will stop the current player:
amp_off_stops_player: true

# Put here some command line (from your PATH) you want to run
# when ordering the 'aux restart' command
# e.g.: 'sudo reboot', 'peaudiosys_restart.sh'
restart_cmd: ~/pe.audio.sys/start.py all

# Control web page behavior
web_config:
    # hide macro buttons at web startup
    hide_macro_buttons: false
    # hide the LU offset slider and the LU monitor bar
    hide_LU: false
    # display EQ and DRC graphs
    show_graphs: true
    # the input selector can become a macros manager:
    inputs_as_macros: false


# The scope ('input', 'album' or 'track') to trigger to reset the measured LU
# from the optional loudness_monitor.py script. Can be modified in runtime.
LU_reset_scope: album

# Powersave: stops/starts Brutefir as per the monitored signal level.
powersave:              false
powersave_noise_floor: -70
powersave_max_wait:     180  # Time in seconds before shutting down Brutefir
